name: ðŸ“¦ 1 - Create a release on merge

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches: [ main ]
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: release-please-action
        uses: google-github-actions/release-please-action@v3.5.1
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          release-type: node
          default-branch: main
  build-beta:
    runs-on: ubuntu-latest
    steps:
      # Mandatory : fetch the current repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # To be faster, use cache system for the NPM
      - name: Cache NPM (node_modules)
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Define the right Node.js's environment
      - name: Environment for NPM
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Upgrade NPM
        run: npm install -g npm

      # NPM run generate // for static website
      - name: NPM build
        run: |
          node -v
          npm ci --cache .npm --unsafe-perm --prefer-offline
          npm run generate
      # Upload artifacts (= builded files) to download them in the next job
      - name: NPM artifacts
        uses: actions/upload-artifact@v2
        with:
          name: npm-build
          retention-days: 1
          path: dist
  deploy-beta:
    needs: build-beta
    runs-on: ubuntu-latest
    environment: beta
    steps:
      # Mandatory : fetch the current repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Download artifacts created in the previous job
      - name: Download NPM artifacts
        uses: actions/download-artifact@v2
        with:
          name: npm-build
          path: dist

      # Define the right Node.js environment
      - name: Environment for deploy
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.2
        with:
          protocol: ftp
          port: 21
          server-dir: ${{ secrets.ftp_path_beta }}
          server: space-cube.xyz
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
